{"version":3,"file":"static/js/693.063cc75e.chunk.js","mappings":"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","sources":["components/Posts/PostsErorr/PostsErorr.jsx","components/Posts/PostsItem/PostsItem.jsx","helpers/cut-string.js","webpack://bootcamp-29-react/./src/components/Skeleton/Skeleton.module.css?e666","components/Skeleton/Skeleton.jsx","components/Posts/PostsLoader/PostsLoader.jsx","components/Posts/PostsNotFound/PostsNotFound.jsx","components/Posts/PostsSearch/PostsSearch.jsx","pages/PostsPage/PostsPage.jsx"],"sourcesContent":["import image from './713761_big_8857bc5285.jpeg';\n\nexport const PostsError = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Все идет по плану. Потерь нет!</p>\n    </div>\n  );\n};\n","import formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { cutString } from 'helpers/cut-string';\nimport { useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const PostsItem = ({ post, onDelete }) => {\n  const location = useLocation();\n  const id = useSelector(state => state.profile.data?.id);\n\n  return (\n    <div className=\"col-12 col-xl-6 col-xxl-4 mb-4\">\n      <div className=\"card\">\n        <img\n          height=\"250px\"\n          alt={post.title}\n          src={post.preview_image}\n          className=\"card-img-top\"\n          style={{ objectFit: 'cover' }}\n        />\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n\n          <p className=\"card-text\">{cutString(post.content, 60)}</p>\n\n          <ul className=\"list-group list-group-flush mb-4\">\n            <li className=\"list-group-item\">Views: {post.views}</li>\n            <li className=\"list-group-item\">Created: {formatDistanceToNow(new Date(post.created_at))}</li>\n          </ul>\n\n          <div className=\"d-flex\">\n            {id === post.user_id && (\n              <button type=\"button\" className=\"btn btn-link\" onClick={() => onDelete(post.id)}>\n                Delete post\n              </button>\n            )}\n\n            <Link to={`/posts/${post.id}`} state={{ from: location }} className=\"btn btn-link ms-3\">\n              Read post\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const cutString = (string, maxLength) => {\n  return string.length > maxLength ? string.slice(0, maxLength) + '...' : string;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"Skeleton_skeleton__xUXxh\"};","import classNames from 'classnames';\n\nimport styles from './Skeleton.module.css';\n\nexport const Skeleton = ({ className, ...props }) => {\n  return <div className={classNames(styles.skeleton, className)} {...props} />;\n};\n","import { Skeleton } from '../../Skeleton';\n\nexport const PostsLoader = ({ amount = 6 }) => {\n  return (\n    <div className=\"container-fluid g-0 pb-5 mb-5\">\n      <div className=\"row\">\n        {[...Array(amount)].map((_, i) => (\n          <div key={i} className=\"col-12 col-xl-6 col-xxl-4 mb-4\">\n            <div className=\"card\">\n              <Skeleton style={{ height: '250px' }} />\n\n              <div className=\"card-body\">\n                <h5 className=\"card-title mb-4\">\n                  <Skeleton style={{ height: '12px' }} />\n                </h5>\n\n                <div className=\"card-text\">\n                  <Skeleton className=\"my-2\" />\n                  <Skeleton className=\"w-50\" />\n                </div>\n\n                <ul className=\"list-group list-group-flush my-4\">\n                  <li className=\"list-group-item d-flex align-items-center\">\n                    Views: <Skeleton className=\"w-25 ms-2\" />\n                  </li>\n                  <li className=\"list-group-item d-flex align-items-center\">\n                    Created: <Skeleton className=\"w-25 ms-2\" />\n                  </li>\n                </ul>\n\n                <div className=\"d-flex mt-3\">\n                  <div className=\"btn btn-link disabled\">Delete post</div>\n                  <div className=\"btn btn-link disabled ms-3\">Read post</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import image from './713761_big_8857bc5285.jpeg';\n\nexport const PostsNotFound = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Произошел отрицательный поиск. Потерь нет!</p>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nimport { Button } from '../../Button';\n\nexport const PostsSearch = ({ defaultValue = '', onSubmit }) => {\n  const [value, setValue] = useState(defaultValue);\n  const handleChange = event => setValue(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(value);\n  };\n\n  return (\n    <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Type to search...\"\n        value={value}\n        onChange={handleChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n","import { useMemo, useEffect } from 'react';\n\nimport { omitBy } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPostsOperation } from 'redux/posts/operation.posts';\n\nimport { Button } from '../../components/Button';\nimport { PostsError, PostsItem, PostsLoader, PostsNotFound, PostsSearch } from '../../components/Posts';\nimport { Status } from '../../constants/fetch-status';\n\nexport const PostsListPage = () => {\n  const dispatch = useDispatch();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') ?? 1;\n  const search = searchParams.get('search') ?? '';\n\n  const params = useMemo(() => Object.fromEntries([...searchParams]), [searchParams]);\n\n  const posts = useSelector(state => state.posts.data);\n  const status = useSelector(state => state.posts.status);\n\n  useEffect(() => {\n    // const obj = { search: '', page: 10, limit: 0 }\n    // omitBy(obj, item => !item) -> { page: 10 }\n    // ?search=&page=10&limit=0 -> ?page=10\n    const newParams = omitBy({ search, page }, item => !item);\n\n    dispatch(getPostsOperation(newParams));\n  }, [dispatch, search, page]);\n\n  const handleUpdateSearch = value => {\n    setSearchParams(omitBy({ search: value, page: 1 }, item => !item));\n  };\n\n  const handleChangePage = newPage => {\n    setSearchParams(omitBy({ ...params, page: newPage }, item => !item));\n  };\n\n  return (\n    <>\n      <PostsSearch defaultValue={search} onSubmit={handleUpdateSearch} />\n\n      <div className=\"container-fluid g-0 pb-5 mb-5\">\n        <div className=\"row\">\n          {(status === Status.Loading || status === Status.Idle) && <PostsLoader />}\n\n          {status === Status.Error && <PostsError />}\n\n          {status === Status.Success && !posts?.data?.length && <PostsNotFound />}\n\n          {posts?.data && posts.data.map(post => <PostsItem key={post.id} post={post} />)}\n        </div>\n      </div>\n\n      <div className=\"pagination\">\n        <div className=\"btn-group mx-auto py-3\">\n          {[...Array(posts?.total_pages)].map((_, index) => (\n            <Button key={index} disabled={index + 1 === posts?.page} onClick={() => handleChangePage(index + 1)}>\n              {index + 1}\n            </Button>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["PostsError","className","src","image","alt","style","width","PostsItem","string","maxLength","post","onDelete","location","useLocation","id","useSelector","state","profile","data","height","title","preview_image","objectFit","content","length","slice","views","formatDistanceToNow","Date","created_at","user_id","type","onClick","to","from","Skeleton","props","classNames","styles","PostsLoader","amount","Array","map","_","i","PostsNotFound","PostsSearch","defaultValue","onSubmit","useState","value","setValue","event","preventDefault","placeholder","onChange","target","Button","PostsListPage","dispatch","useDispatch","useSearchParams","searchParams","setSearchParams","page","get","search","params","useMemo","Object","fromEntries","posts","status","useEffect","newParams","omitBy","item","getPostsOperation","Posts","Status","total_pages","index","disabled","newPage"],"sourceRoot":""}