{"version":3,"file":"static/js/487.f32ec6fe.chunk.js","mappings":"wKAAaA,EAAS,WACpB,OACE,iCACE,gBAAKC,UAAU,8BACf,gBACEA,UAAU,mEACVC,MAAO,CAAEC,QAAS,QAASC,OAAQ,SAAU,UAE7C,gBAAKH,UAAU,4BAA2B,UACxC,iBAAMA,UAAU,kBAAiB,8BAK3C,C,sJCNaI,EAAiB,WAAO,IAAD,EAC1BC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,MAAK,eAA/BC,EAAI,KAAEC,EAAO,KACpB,GAAkCF,EAAAA,EAAAA,WAAS,GAAK,eAAzCG,EAAS,KAAEC,EAAY,KAa9B,OAXAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IAEbE,EAAAA,EAAAA,IAAqBV,GAClBW,KAAKL,GACLM,OAAM,WACLC,EAAAA,GAAAA,MAAY,wBACd,IACCC,SAAQ,kBAAMN,GAAa,EAAM,GACtC,GAAG,CAACR,IAEAO,GACK,SAACb,EAAA,EAAM,IAMdW,IACE,iCACE,SAAC,KAAI,CAACU,IAAkB,QAAd,EAAAb,EAASc,aAAK,aAAd,EAAgBC,OAAQ,SAAUtB,UAAU,uBAAsB,sBAG5E,gBACEuB,IAAKb,EAAKc,MACVC,IAAKf,EAAKgB,MACV1B,UAAU,iBACVC,MAAO,CAAE0B,UAAW,QAASC,MAAO,OAAQC,UAAW,YAGzD,eAAI7B,UAAU,OAAM,SAAEU,EAAKgB,SAE3B,gBAAKI,wBAAyB,CAAEC,OAAQrB,EAAKsB,QAAQC,QAAQ,MAAO,aAEpE,SAAC,KAAI,CAACb,GAAE,iBAAYf,EAAM,aAAaL,UAAU,uBAAsB,gCAIvE,SAAC,EAAAkC,SAAQ,CAACC,UAAU,uCAAmB,UACrC,SAAC,KAAM,QAKjB,C","sources":["components/Loader/Loader.jsx","pages/SinglePostPage/SinglePostPage.jsx"],"sourcesContent":["export const Loader = () => {\n  return (\n    <>\n      <div className=\"modal-backdrop fade show\" />\n      <div\n        className=\"modal fade show d-flex align-items-center justify-content-center\"\n        style={{ display: 'block', height: '100vh' }}\n      >\n        <div className=\"spinner-border text-light\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState, Suspense } from 'react';\n\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { Loader } from '../../components/Loader';\nimport { getSinglePostService } from '../../services/posts.service';\n\nexport const SinglePostPage = () => {\n  const { postId } = useParams();\n  const location = useLocation();\n\n  const [post, setPost] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getSinglePostService(postId)\n      .then(setPost)\n      .catch(() => {\n        toast.error('Something went wrong!');\n      })\n      .finally(() => setIsLoading(false));\n  }, [postId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  // null, undefined ?? 1\n  // false, undefined, null, 0, NaN || 1\n  return (\n    post && (\n      <>\n        <Link to={location.state?.from || '/posts'} className=\"btn btn-primary mb-4\">\n          Go back\n        </Link>\n        <img\n          src={post.image}\n          alt={post.title}\n          className=\"img-fluid mb-4\"\n          style={{ maxHeight: '600px', width: '100%', objectFit: 'cover' }}\n        />\n\n        <h1 className=\"mb-5\">{post.title}</h1>\n\n        <div dangerouslySetInnerHTML={{ __html: post.content.replace(/\\n/g, '<br/>') }} />\n\n        <Link to={`/posts/${postId}/comments`} className=\"btn btn-primary my-4\">\n          Vew post comments\n        </Link>\n\n        <Suspense fallback={<p>Loading ...</p>}>\n          <Outlet />\n        </Suspense>\n      </>\n    )\n  );\n};\n"],"names":["Loader","className","style","display","height","SinglePostPage","postId","useParams","location","useLocation","useState","post","setPost","isLoading","setIsLoading","useEffect","getSinglePostService","then","catch","toast","finally","to","state","from","src","image","alt","title","maxHeight","width","objectFit","dangerouslySetInnerHTML","__html","content","replace","Suspense","fallback"],"sourceRoot":""}