{"version":3,"file":"static/js/415.1e8b9a0b.chunk.js","mappings":"wKAAaA,EAAS,WACpB,OACE,iCACE,gBAAKC,UAAU,8BACf,gBACEA,UAAU,mEACVC,MAAO,CAAEC,QAAS,QAASC,OAAQ,SAAU,UAE7C,gBAAKH,UAAU,4BAA2B,UACxC,iBAAMA,UAAU,kBAAiB,8BAK3C,C,sJCPMI,EAAe,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,cAAe,IAGJC,EAAc,WACzB,OAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAC9B,GAAwBF,EAAAA,EAAAA,UAASN,GAAa,eAAvCS,EAAI,KAAEC,EAAO,KAEdC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdL,GAAQ,SAAAM,GAAI,yBAAUA,GAAI,cAAGF,EAAOC,GAAK,GAC3C,EAwBA,OACE,gCACGR,IAAa,SAACZ,EAAA,EAAM,KAErB,kBAAMsB,OAAO,IAAIC,SAxBA,SAAAN,GACnBA,EAAMO,iBAEUC,OAAOC,OAAOZ,GAAMa,MAAK,SAAAC,GAAI,OAAKA,CAAI,IAEpDC,EAAAA,GAAAA,MAAY,8BAIdhB,GAAa,IACbiB,EAAAA,EAAAA,IAAqBhB,GAClBiB,MAAK,WACJF,EAAAA,GAAAA,QAAc,4CAChB,IACCG,OAAM,WACLH,EAAAA,GAAAA,MAAY,wBACd,IACCI,SAAQ,kBAAMpB,GAAa,EAAM,IACtC,EAM4C,WACtC,gBAAKZ,UAAU,OAAM,UACnB,mBAAOA,UAAU,qBAAoB,WACnC,uCACA,kBACEmB,MAAON,EAAKR,MACZ4B,SAAUlB,EACVmB,KAAK,OACLhB,KAAK,QACLlB,UAAU,eACVmC,YAAY,yBAKlB,gBAAKnC,UAAU,OAAM,UACnB,mBAAOA,UAAU,qBAAoB,WACnC,yCACA,qBACEmB,MAAON,EAAKP,QACZ2B,SAAUlB,EACVf,UAAU,eACVkB,KAAK,UACLkB,KAAK,KACLD,YAAY,uBAKlB,iBAAKnC,UAAU,OAAM,WACnB,mBAAOA,UAAU,qBAAoB,WACnC,4DACA,kBACEkC,KAAK,OACLhB,KAAK,gBACLC,MAAON,EAAKL,cACZyB,SAAUlB,EACVf,UAAU,eACVmC,YAAY,4CAIftB,EAAKN,QAAS,gBAAK8B,IAAKxB,EAAKL,cAAeR,UAAU,gBAAgBsC,IAAI,GAAGrC,MAAO,CAAEE,OAAQ,eAGjG,iBAAKH,UAAU,OAAM,WACnB,mBAAOA,UAAU,qBAAoB,WACnC,yDACA,kBACEkC,KAAK,OACLhB,KAAK,QACLC,MAAON,EAAKN,MACZ0B,SAAUlB,EACVf,UAAU,eACVmC,YAAY,4CAIftB,EAAKN,QAAS,gBAAK8B,IAAKxB,EAAKN,MAAOP,UAAU,gBAAgBsC,IAAI,GAAGrC,MAAO,CAAEE,OAAQ,eAGzF,iBAAKH,UAAU,cAAa,WAC1B,mBAAQkC,KAAK,SAASlC,UAAU,iCAAiCuC,QAxFrD,WAAH,OAASzB,EAAQV,EAAc,EAwF8C,yBAItF,mBAAQ8B,KAAK,SAASlC,UAAU,kBAAiB,4BAO3D,C","sources":["components/Loader/Loader.jsx","pages/NewPostPage/NewPostPage.jsx"],"sourcesContent":["export const Loader = () => {\n  return (\n    <>\n      <div className=\"modal-backdrop fade show\" />\n      <div\n        className=\"modal fade show d-flex align-items-center justify-content-center\"\n        style={{ display: 'block', height: '100vh' }}\n      >\n        <div className=\"spinner-border text-light\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport { Loader } from '../../components/Loader';\nimport { createNewPostService } from '../../services/posts.service';\n\nconst initialState = {\n  title: '',\n  content: '',\n  image: '',\n  preview_image: '',\n};\n\nexport const NewPostPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [form, setForm] = useState(initialState);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleReset = () => setForm(initialState);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isEmpty = Object.values(form).some(item => !item);\n    if (isEmpty) {\n      toast.error('Fill all required fields!');\n      return;\n    }\n\n    setIsLoading(true);\n    createNewPostService(form)\n      .then(() => {\n        toast.success('You have successfully created a new post!');\n      })\n      .catch(() => {\n        toast.error('Something went wrong!');\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <form action=\"#\" onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"d-block form-label\">\n            <p>Post title</p>\n            <input\n              value={form.title}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Post title ...\"\n            />\n          </label>\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"d-block form-label\">\n            <p>Post content</p>\n            <textarea\n              value={form.content}\n              onChange={handleChange}\n              className=\"form-control\"\n              name=\"content\"\n              rows=\"10\"\n              placeholder=\"Post content\"\n            />\n          </label>\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"d-block form-label\">\n            <p>Preview image url (small image)</p>\n            <input\n              type=\"text\"\n              name=\"preview_image\"\n              value={form.preview_image}\n              onChange={handleChange}\n              className=\"form-control\"\n              placeholder=\"https://example.com/samll_image.jpeg\"\n            />\n          </label>\n\n          {form.image && <img src={form.preview_image} className=\"img-thumbnail\" alt=\"\" style={{ height: '200px' }} />}\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"d-block form-label\">\n            <p>Post image url (large image)</p>\n            <input\n              type=\"text\"\n              name=\"image\"\n              value={form.image}\n              onChange={handleChange}\n              className=\"form-control\"\n              placeholder=\"https://example.com/large_image.jpeg\"\n            />\n          </label>\n\n          {form.image && <img src={form.image} className=\"img-thumbnail\" alt=\"\" style={{ height: '200px' }} />}\n        </div>\n\n        <div className=\"d-flex mt-5\">\n          <button type=\"button\" className=\"d-block btn btn-secondary me-4\" onClick={handleReset}>\n            Reset form\n          </button>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n"],"names":["Loader","className","style","display","height","initialState","title","content","image","preview_image","NewPostPage","useState","isLoading","setIsLoading","form","setForm","handleChange","event","target","name","value","prev","action","onSubmit","preventDefault","Object","values","some","item","toast","createNewPostService","then","catch","finally","onChange","type","placeholder","rows","src","alt","onClick"],"sourceRoot":""}