{"version":3,"file":"static/js/322.0b64d42f.chunk.js","mappings":"+LAEaA,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAAO,EAe/CC,GAAsBC,EAAAA,EAAAA,IAAe,CAACL,EAdpB,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,SAAU,IAcyB,SAACH,EAAQG,GAE9F,OADAC,QAAQC,IAAI,uBACLF,EAAUG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASV,EAAOS,cAAc,GACxF,I,mBClBaE,EAAY,SAAH,GAA4B,IAAtBJ,EAAI,EAAJA,KAAMK,EAAQ,EAARA,SACxBC,EAA+CN,EAA/CM,GAAIL,EAA2CD,EAA3CC,KAAMM,EAAqCP,EAArCO,MAAOC,EAA8BR,EAA9BQ,IAAKC,EAAyBT,EAAzBS,OAAQC,EAAiBV,EAAjBU,aAGtC,OACE,gBAAKC,UAAU,YAAW,UACxB,iBAAKA,UAAU,YAAW,WACxB,gBAAIA,UAAU,oBAAmB,UAC9BV,EACAS,IAAgB,cAAGC,UAAU,wBAAuB,8BAGvD,eAAIA,UAAU,gCAA+B,SAAEJ,KAC/C,cAAGI,UAAU,YAAW,SAAEH,KAE1B,gBAAKG,UAAU,cAAa,SACzBF,EAAOG,KAAI,SAAAC,GAAI,OACd,iBAAiBF,UAAU,qBAAoB,SAC5CE,GADQA,EAEJ,OAIX,gBAAKF,UAAU,SAAQ,UACrB,mBAAQG,KAAK,SAASH,UAAU,qBAAqBI,QAtBxC,WAAH,OAASV,EAASC,EAAI,EAsB2C,0BAOrF,EC3BaU,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAQXzB,GAAS0B,EAAAA,EAAAA,IAAY7B,GACrBM,GAAYuB,EAAAA,EAAAA,IAAYzB,GAExB0B,EAAmB,SAAAd,GACvBW,GAASI,EAAAA,EAAAA,IAAiBf,GAC5B,EAQA,OAFAT,QAAQC,IAAI,cAGV,iCACE,gBAAKa,UAAU,mBAAkB,UAC/B,kBACEG,KAAK,OACLH,UAAU,eACVW,YAAY,kBACZC,MAAO9B,EACP+B,SAdmB,SAAAC,GACzBR,GAASS,EAAAA,EAAAA,IAAiBD,EAAME,OAAOJ,OACzC,OAgBI,gBAAKZ,UAAU,OAAM,SAClBf,EAAUgB,KAAI,SAAAZ,GAAI,OACjB,SAACI,EAAS,CAAeJ,KAAMA,EAAMK,SAAUe,GAA/BpB,EAAKM,GAA8C,QAK7E,C","sources":["redux/users/selectors.users.js","pages/ExercisesPage/UsersPage/UsersItem.jsx","pages/ExercisesPage/UsersPage/UsersPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectUserSearch = state => state.users.search;\nexport const selectUsersList = state => state.users.usersList;\n\n// export const selectFilteredUsers = state => {\n//   console.log('selectFilteredUsers');\n//   const search = selectUserSearch(state);\n//   const usersList = selectUsersList(state);\n\n//   return usersList.filter(user => user.name.toLowerCase().includes(search.toLowerCase()));\n// };\n\n// selectFilteredUsers('', [...]) -> [...]\n// selectFilteredUsers('a', [...]) -> [..]\n// selectFilteredUsers('', [...]) -> [...]\n\nexport const selectFilteredUsers = createSelector([selectUserSearch, selectUsersList], (search, usersList) => {\n  console.log('selectFilteredUsers');\n  return usersList.filter(user => user.name.toLowerCase().includes(search.toLowerCase()));\n});\n","import { PropTypes } from 'prop-types';\n\nexport const UsersItem = ({ user, onDelete }) => {\n  const { id, name, email, bio, skills, isOpenToWork } = user;\n  const handleDelete = () => onDelete(id);\n\n  return (\n    <div className=\"card my-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title d-flex\">\n          {name}\n          {isOpenToWork && <p className=\"badge bg-success ms-3\">Open to work</p>}\n        </h5>\n\n        <h6 className=\"card-subtitle mb-2 text-muted\">{email}</h6>\n        <p className=\"card-text\">{bio}</p>\n\n        <div className=\"d-flex mb-2\">\n          {skills.map(skil => (\n            <span key={skil} className=\"badge bg-dark me-1\">\n              {skil}\n            </span>\n          ))}\n        </div>\n\n        <div className=\"d-flex\">\n          <button type=\"button\" className=\"card-link btn-link\" onClick={handleDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nUsersItem.propTypes = {\n  user: PropTypes.exact({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    bio: PropTypes.string.isRequired,\n    skills: PropTypes.arrayOf(PropTypes.string.isRequired),\n    isOpenToWork: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredUsers, selectUserSearch } from 'redux/users/selectors.users';\nimport { userDeleteAction, userSearchAction } from 'redux/users/slice.users';\n\nimport { UsersItem } from './UsersItem';\n\nexport const UsersPage = () => {\n  const dispatch = useDispatch();\n\n  // До\n  // const search = useSelector(state => state.users.search);\n\n  // Післ\n  // const selectUserSearch = state => state.users.search;\n\n  const search = useSelector(selectUserSearch); // '' -> ''\n  const usersList = useSelector(selectFilteredUsers); // [] -> [] -> re-render\n\n  const handleDeleteUser = id => {\n    dispatch(userDeleteAction(id));\n  };\n\n  const handleSearchChange = event => {\n    dispatch(userSearchAction(event.target.value));\n  };\n\n  console.log('UsersPage');\n\n  return (\n    <>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search username\"\n          value={search}\n          onChange={handleSearchChange}\n        />\n      </div>\n\n      <div className=\"mb-5\">\n        {usersList.map(user => (\n          <UsersItem key={user.id} user={user} onDelete={handleDeleteUser} />\n        ))}\n      </div>\n    </>\n  );\n};\n"],"names":["selectUserSearch","state","users","search","selectFilteredUsers","createSelector","usersList","console","log","filter","user","name","toLowerCase","includes","UsersItem","onDelete","id","email","bio","skills","isOpenToWork","className","map","skil","type","onClick","UsersPage","dispatch","useDispatch","useSelector","handleDeleteUser","userDeleteAction","placeholder","value","onChange","event","userSearchAction","target"],"sourceRoot":""}